/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"
#include "s3eDevice.h"


#include "s3eIOSIDFA.h"


// For MIPs (and WP8) platform we do not have asm code for stack switching 
// implemented. So we make LoaderCallStart call manually to set GlobalLock
#if defined __mips || defined S3E_ANDROID_X86 || (defined(WINAPI_FAMILY) && (WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP))
#define LOADER_CALL
#endif

/**
 * Definitions for functions types passed to/from s3eExt interface
 */
typedef    s3eBool(*s3eIOSIDFAIsTrackingEnabled_t)();
typedef const char*(*s3eIOSIDFAGetIDFA_t)();

/**
 * struct that gets filled in by s3eIOSIDFARegister
 */
typedef struct s3eIOSIDFAFuncs
{
    s3eIOSIDFAIsTrackingEnabled_t m_s3eIOSIDFAIsTrackingEnabled;
    s3eIOSIDFAGetIDFA_t m_s3eIOSIDFAGetIDFA;
} s3eIOSIDFAFuncs;

static s3eIOSIDFAFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0xf1c66af, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE,                 "error loading extension: s3eIOSIDFA");
            
        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0xf1c66af, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool s3eIOSIDFAAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

s3eBool s3eIOSIDFAIsTrackingEnabled()
{
    IwTrace(IOSIDFA_VERBOSE, ("calling s3eIOSIDFA[0] func: s3eIOSIDFAIsTrackingEnabled"));

    if (!_extLoad())
        return S3E_FALSE;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eBool ret = g_Ext.m_s3eIOSIDFAIsTrackingEnabled();

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

const char* s3eIOSIDFAGetIDFA()
{
    IwTrace(IOSIDFA_VERBOSE, ("calling s3eIOSIDFA[1] func: s3eIOSIDFAGetIDFA"));

    if (!_extLoad())
        return NULL;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    const char* ret = g_Ext.m_s3eIOSIDFAGetIDFA();

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}
